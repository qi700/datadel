德国电子政府通信系统组件存在多个严重漏洞
德国电子政府通信系统组件存在多个严重漏洞可导致政府交换数据泄露g20峰会前夕.德国大力加强网络安保并设立了全天候指挥中心.而最近.sec.consult安全研究者发现.德国电子政府系统通讯库中的在线服务计算机接口osci存在多个严重漏洞.可导致政府交换数据被攻击泄露.以下是sec.consult的相关研究.简要说明osci接口用于德国各个公共政府机构之间的数据交换.其osci数据传输协议是德国电子政务信息系统的基础和强制性通信协议.现在.osci协议已广泛应用于德国各领域政务系统中.如人口登记.公共卫生和司法管理等.osci协议的设计应用基于在不受信网络中提供保密性.完整性.真实性和不可否认性的安全考虑.为电子政务打造一个安全.加密和合法的数据交换传输渠道.该协议的一个常用实现就是'osci.transport'java库.它最早于2004年被开发.并由协议开发者进行维护.在我们最近的漏洞公告中.我们描述了如何对osci库进行了一些有效的攻击研究.经证明.攻击者可以利用osci库进行xxe注入攻击.并能获取到osci应用系统的相关内部文件数据信息.基于此.攻击者一旦获得了对通信信道访问控制权后.在某些特定条件下.还能对部分传输数据进行消息解密和伪造等严重操作.目前.我们还未针对osci作出一个完整的安全评估.但不能排除还存在其它漏洞的可能.osci协议技术简要为了更好地了解漏洞情况.在此对osci协议作一点简单的技术介绍.osci协议是基于xml的内容无关协议.其通信机制通常由一个中间件来操作控制.在通信开始时.发送者必须向这个中间件发送一个请求消息.在该消息到达接收方之前.存在以下两种应用场景.中间件主动向osci服务器发送该消息osci服务器连接到中间件进行消息获取为了保护传输信息.osci协议定义了以下几种可选的安全机制.有效负载使用作者或发送者的私钥进行签名.这确保了接收方可以验证消息的真实性有效载荷使用最终接收者的公钥进行加密.确保信息只能由实际接收方读取.而不能由中间件或其它第三方读取使用发送方私钥签名的osci消息允许中间件或接收方对发送方进行身份验证.并确认传输消息和元数据没有被篡改利用公钥加密的osci消息确保通信只能在发送方.中间件和接收方之间进行.不可由第三方攻击者读取掌握测试设置我们针对osci 1.6.1版本的java库进行了安全测试.该库源代码可以点此下载.但该库中并不包含我们创建完整测试所需的完全代码.我们因此采用编写虚拟代码的方式来对缺失组件进行模拟.最终.我们对库中一个经过轻微修改的被动接收者实例进行了攻击测试.我们没有对完整的osci实际生产系统或应用程序进行测试.只是进行了一种简单的模拟性安全检查.因此.我们不能排除存在其它漏洞或攻击路径的可能.所发现漏洞从攻击者角度看.主要存在两种攻击方法.对通信伙伴的攻击.攻击者尝试向通信伙伴发送可控制操作的osci消息.以便入侵对方对通信的攻击.攻击者尝试对加密和签名osci消息进行解密攻击.以获得对这些消息的访问控制sec.consult在osci协议库1.6.1版本发现了多个漏洞.并成功对至少一种通信场景进行了漏洞测试.鉴于这些漏洞将严重影响德国关键电子政务系统.所以我们在此就不公布具体漏洞利用代码.只对这些漏洞作出介绍.对osci服务器的攻击xxe漏洞.cve.2017.10668osci消息格式基于xml标准.具备外部实体包含包含功能.开启该功能的解析程序通常存在外部实体注入漏洞.而osci库却明确启用该功能.因此容易受到此类漏洞攻击.这种攻击除了造成拒绝服务影响外.还可能让攻击者获取系统文件.然而.这种攻击与其它xxe攻击一样存在限制.如果文件包含特定字符.攻击者将无法检索它们.除了其他安全性影响.此漏洞可能允许攻击者从系统中读取文件.然而.与任何xxe漏洞一样有限制.如果文件包含一些xml特定禁止的字符.攻击者将无法检索获取它们.该攻击正常进行时.攻击者无需获得对原始消息的访问控制.对于被动的osci接收方来说.攻击者只需通过网络即可对其形成访问或进一步攻击.攻击测试时.我们使用了osci挑战.应答功能.该功能允许发件人在'挑战'元素中指定任意值.而收件人也必须在osci响应的response元素中指定该值.最终.我们成功实施了这种xxe攻击.通过challenge元素的设置在response元素中获取到了一些引用数据.在被动接收源码中.我们发现攻击者可以向osci服务发送一个未加密签名消息.以从osci服务系统中读取任意文件.java反序列化漏洞另外.由于osci中的xml解析器包含在一个java反序列化集成工具中.这意味着xxe漏洞会被通过java反序列化渠道被利用.如果osci应用程序存在.从不可信来源中反序列化数据存在漏洞的osci库恰好在应用程序的classpath路径中那么攻击者可以通过向osci应用程序发送特定的序列化数据.触发java反序列化漏洞来进行带外xxe攻击.对osci消息进行攻击我们通过建模.在通信信道被认为是不安全的前提下.假设了一种攻击者能够嗅探加密osci消息的场景.下图展示了我们这种攻击情形.破解序列加密实现padding oracle攻击.cve.2017.10668我们首先要解决的是数据传输加密.osci支持以下几种加密.3des.cbcaes.128.cbcaes.192.cbcaes.256.cbc可以看出osci只支持cbc模式的数据块密码.当这种加密模式使用不当时.可能会发生几种方式的攻击.对cbc最直接的攻击是padding oracle攻击.成功的攻击利用将允许攻击者破解任何加密消息.根据osci标准和库实现中存在的一种对解密失败的错误代码说明.我们可以实现一种简单的padding oracle攻击.由于大约需要128个请求字符来解密一个字节.所以理论上.这种攻击被认为不可行.但我们经过优化.创建了一个运行更快的破解脚本.它支持更多常见字节.它基于块结构来预测块内容在我们的实际测试设置中.可以在半小时内在本地机器上破解osci process delivery消息.绕过序列签名校验.cve.2017.10669osci使用xml签名来提供真实性.在过去.一般针对xml签名的攻击是xml签名包装攻击.为此.我们首先研究了xml内容哪些部分被签名.以及验证实际应用程序如何访问签名内容.如果接收方应用程序可能被已验证的xml消息的一部分欺骗.而其余部分也能正常被交换接收.则其存在xsw漏洞.osci库使用一个简单的解析器saxparser.这也意味着很多解析逻辑由库自身来实现完成.虽然这能提供更多的灵活性和便利性.但也容易带来实现错误.以下显示的是一个经过签名的osci序列图示.soap.envelope)soap.header)osci.controlblock).osci.controlblock)osci.clientsignature)ds.signature)ds.reference uri.'.body').ds.reference)ds.signature)osci.clientsignature)osci.desiredlanguages.)osci.processdelivery.)osci.intermediarycertificates).osci.intermediarycertificates)osci.nonintermediarycertificates).osci.nonintermediarycertificates)osci.header)soap.body id.'body')soap.body)soap.envelope)其消息头包含一个xml签名.即ds.signature元素.ds.reference元素的uri属性描述xml文档的哪些部分被签名.在该例中.它指在soap.body内容中具有id'body'的元素.为了实现soap内容体的伪造.我们需要使用两个soap内容体来创建一个请求.并要确保解析器会检查原始soap体签名.而实际上.原始soap体内容代码已被我们替换为另外一个被控制soap体.该库说明osci程序存在以下一些不当的配置bug.我们能够利用这个bug来实施xml签名包装攻击.所有在soap标头之下除clientsignature元素之外的全部元素都必须经过签名soap body自身也必须经过签名该库应该检查文档最后body id的唯一性.但存在一个使此检查无效的bug.在实际应用中.这意味着最后一个元素给定的id用于签名验证为了作进一步处理.soap body通常位于soap envelope元素下方.对于签名验证来说.soap body主体可以在文档中的任何位置漏洞影响以上存在漏洞会对osci系统和用户产生严重安全影响.首先.osci本身安全机制存在安全缺陷漏洞.这些漏洞可导致攻击者实现对传输数据的拦截.篡改.破解和获取.另外.鉴于签名和加密机制是用户可选设置.一旦这些设置被用户处于真空状态.通信双方传输数据也将毫无安全保密可言.osci是德联邦强制性政务系统标准.被广泛应用于各政务行业信息系统中.根据德国it标准协调办公室网站资料.我们初步确认这些漏洞将对多家政府机构信息系统造成影响.如.公共卫生系统国民状况登记系统一些政府文件管理系统人口登记系统司法电子政务数据交换系统相关方反应kosit根据我们提供的漏洞.已于2017年3月13日发布了新的osci库补丁.kosit发布了包含有更安全加密算法的osci更新版本.sec consult已联合德国信息安全相关机构对漏洞进行及时修补.并建议osci使用方确定漏洞并尽快更新软件.来源.sec.consult.freebuf小编clouds编译